# GoReleaser config for OpenPilot
# Generates archives named openpilot_<version>_<os>_<arch>.tar.gz (except Windows zip for user convenience) and
# an additional latest-style openpilot_<os>_<arch>.tar.gz copy for the most recent tag via an extra step (TODO manual or future workflow step).
# Keep in sync with npm/bin/postinstall.js candidate patterns.

project_name: openpilot

before:
  hooks:
    - go mod tidy

builds:
  - id: openpilot
    main: ./main.go
    binary: openpilot
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - darwin
      - windows
    goarch:
      - amd64
      - arm64
    ldflags:
      - -s -w -X github.com/JyotirmoyDas05/openpilot/internal/version.Version={{.Version}}

archives:
  - id: tgz
    builds: [openpilot]
    format: tar.gz
    name_template: 'openpilot_{{ .Version }}_{{ .Os }}_{{ if eq .Arch "amd64" }}x86_64{{ else if eq .Arch "386" }}i386{{ else }}{{ .Arch }}{{ end }}'
    files:
      - none*
    wrap_in_directory: false
    replacements:
      darwin: darwin
      linux: linux
      windows: windows
  - id: zip
    builds: [openpilot]
    format: zip
    name_template: 'openpilot_{{ .Version }}_{{ .Os }}_{{ if eq .Arch "amd64" }}x86_64{{ else if eq .Arch "386" }}i386{{ else }}{{ .Arch }}{{ end }}'
    files:
      - none*
    wrap_in_directory: false
    replacements:
      darwin: darwin
      linux: linux
      windows: windows
    allow_different_binary_count: true
    formats:
      - zip
    # Only keep zip for windows
    # We'll filter via extra_files in release section if needed

checksum:
  name_template: "checksums.txt"

changelog:
  sort: asc
  filters:
    exclude:
      - "^docs:"
      - "^test:"

dockers: []

nfpms: []

brews: []

snapcrafts: []
