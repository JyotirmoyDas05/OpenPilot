name: semantic-release

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
      - uses: actions/setup-go@v5
        with:
          go-version: "1.25.x"
          check-latest: true
      - name: Install GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          version: latest
          install-only: true
      - name: Install dependencies (ci with fallback)
        run: |
          if [ -f package-lock.json ]; then
            echo "Attempting npm ci (lockfile present)";
            if ! npm ci; then
              echo "npm ci failed; falling back to npm install";
              npm install;
            fi
          else
            echo "No lockfile found; running npm install";
            npm install;
          fi
      - name: Build cross-platform binaries with GoReleaser
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          goreleaser build --clean
          ls -l dist
      - name: Prepare latest-style duplicate assets
        run: |
          set -euo pipefail
          for f in dist/openpilot_*_*; do
            base=$(basename "$f")
            latestName=$(echo "$base" | sed -E "s/openpilot_[0-9]+\.[0-9]+\.[0-9]+_/openpilot_/")
            if [ ! -f "dist/$latestName" ]; then cp "$f" "dist/$latestName"; fi
          done
          ls -l dist
      - name: Semantic Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npm run semantic-release
